interactive-cv {

  foo = "bar" # sample parameter

  schema = [ # available RDF tokens
    { uri = "http://coldcore.com/schema/cv/Person/",     nodes = [] }
    { uri = "http://coldcore.com/schema/cv/Technology/", nodes = [] }
    { uri = "http://coldcore.com/schema/cv/Team/",       nodes = [] }
    { uri = "http://coldcore.com/schema/cv/Company/",    nodes = [] }
    { uri = "http://coldcore.com/schema/cv/term#",       nodes = [
      "about",   "startYear",     "endYear",        "startMonth",   "endMonth",   "startDay",    "endDay",
      "has",     "nationality",   "available",      "work",         "location",   "contact",     "email",
      "phone",   "education",     "study",          "hobby",        "likes",      "reference",   "referee",
      "skill",   "knows",         "contribution",   "url",          "career",     "assignment",  "group",
      "role",    "project",       "uses",           "company"
    ] }
    { uri = "http://www.w3.org/1999/02/22-rdf-syntax-ns#", nodes = [ "type" ] }
    { uri = "http://xmlns.com/foaf/0.1/",                  nodes = [ "name", "title", "Person", "Organization" ] }
    { uri = "http://dbpedia.org/ontology/",                nodes = [ "birthDate" ] }
    { uri = "http://www.w3.org/2001/XMLSchema#",           nodes = [ "date", "gYear", "gMonth", "gDay" ] }
  ]

  link-nodes = {
    same-as = "same as" # label of "same as" node and its link
    more-like = "more like" # label of "more like" node and its link
    n-count = 10 # padination of "more like" nodes (0 to disable)
  }

  output-dir = "target/output" # output directory

  writers = [ # all writers
    "com.coldcore.icv.writer.neodb.NeoWriter",
    "com.coldcore.icv.writer.c3.C3Writer"
  ]

  interceptors = [] # all interceptors

  neo-writer = [ # neo4j writer config (-Xmx512m) (output directory: graph.db)
    "cache_type = none",
    "use_memory_mapped_buffers = true",
    "neostore.nodestore.db.mapped_memory = 10M",
    "neostore.relationshipstore.db.mapped_memory = 10M",
    "neostore.propertystore.db.mapped_memory = 10M",
    "neostore.propertystore.db.strings.mapped_memory = 10M",
    "neostore.propertystore.db.arrays.mapped_memory = 0M",
    "neostore.propertystore.db.index.keys.mapped_memory = 5M",
    "neostore.propertystore.db.index.mapped_memory = 5M"
  ]

  c3-writer = { # C3 writer config (output directory: c3)
    dir = "src/main/resources/c3"
    charts = [
      "com.coldcore.icv.writer.c3.chart.TimePerCompany",
      "com.coldcore.icv.writer.c3.chart.TimePerTechnology",
      "com.coldcore.icv.writer.c3.chart.Timelapse"
    ]
    pattern = "lowercase_lowercase" # "name_user.html" pattern: lowercase | uppercase | asis (name_id.html)
  }

  c4-interceptor = { # C4 interceptor config (output directory: c4-resources)
    c3-dir = "src/main/resources/c3" # C3 writer directory
    c4-dir = "src/main/resources/c4"
  }

  haala-interceptor = { # HAALA interceptor config (output directory: haala)
    dir = "src/main/resources/haala"
  }

}
